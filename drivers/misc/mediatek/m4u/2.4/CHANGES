m4u 2.4 is based on m4u 2.0
Modifications at 2017/04/20:
1.Partition 4G mva space to 6 region when m4u init:
	*[0, 1): reserved.
	*[1, 0x500): shared with all ports.
	*[0x500, 0x501): reserved for vpu reset vector.
	*[0x501, 0x600): shared with all ports.
	*[0x600, 0x7E0): reserved for vpu.
	*[0x7E0, 0xFFF]: shared with all ports.
2.Take bit14 of mvaGraph as reserved region bit for vpu.
	And set 1 to each bit14 of mvaGraph in vpu region when m4u init.
3.Prevent non-vpu port from accessing vpu region.
	*we will check input mva region status when any ports allocate or free mva.
4.When vpu wants to alloc mva, it only uses m4u_do_mva_alloc_fix or m4u_do_mva_alloc_start_from.
	If it alloced successfully, mva manager must make sure the reserved bit of vpu fix region was set.
5.Modify m4u_mvaGraph_dump() to check if reserved bit of each mvaGraph element in vpu fix region was set.
	The related log about it is "integrity".
6.move some macros in m4u_mva.c to m4u_mva.h